openapi: 3.0.3
info:
  title: Library API
  version: 1.0.1
  description: STD22075
servers:
  - url: https://library.com
paths:
  /books:
    get:
      tags:
        - Books
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        - in: query
          name: releaseDateMin
          description: |
            if `releaseDateMax` is not provided,
            `releaseDateMin` is ignored
          schema:
            type: string
            format: date
          required: false
        - in: query
          name: releaseDateMax
          description: |
            if `releaseDateMin` is not provided,
            `releaseDateMax` is ignored
          schema:
            type: string
            format: date
          required: false
        #TODO3: add parameter to filter books by intervals of dates of the releaseDate
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      tags:
        - Books
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CrupdateBook'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /books/{bookId}/authors/{authorId}:
    put:
      tags:
        - Books
      description: Change the author of one book
      parameters:
        - in: path
          name: bookId
          schema:
            type: string
          required: true
        - in: path
          name: author
          schema:
            type: string
          required: true
      responses:
        200:
          description: The list of 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /books/authors:
    put:
      tags:
        - Books
      description: Change authors of some books
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - bookId
                  - authorId
                properties:
                  bookId:
                    type: string
                  authorId:
                    type: string
      responses:
        200:
          description: The list of 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /authors:
    get:
      tags:
        - Authors
      operationId: getAuthor
      summary: Get all authors
      description: The returned author are filtered by name
      parameters:
        - in: query
          name: authorName
          description: Filter the return author by given name
          required: false
          schema:
            type: string
      responses:
        200:
          description: The list of filtered author
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Author"
    put:
      tags:
        - Authors
      operationId: crupdateAuthor
      summary: Create or update list of authors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Author"
      responses:
        200:
          description: The list of created or updated author
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Author"
    delete:
      tags:
        - Authors
      operationId: deleteAuthor
      summary: delete author
      parameters:
        - in: query
          name: id
          description: id of the author
          required: true
          schema:
            type: integer
      responses:
        200:
          description: The deleted author
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Author"
components:
  schemas:
    CrupdateBook:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date
    Author:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        sex:
          type: string
          enum:
            - M
            - F
    Book:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrupdateBook'
      properties:
        author:
          $ref: '#/components/schemas/Author'